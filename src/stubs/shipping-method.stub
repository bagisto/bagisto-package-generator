<?php

namespace $NAMESPACE$;

use Webkul\Checkout\Facades\Cart;
use Webkul\Checkout\Models\CartShippingRate;
use Webkul\Shipping\Carriers\AbstractShipping;

class $CLASS$ extends AbstractShipping
{
    /**
     * Shipping method carrier code.
     */
    protected $code = '$LOWER_NAME$';

    /**
     * Shipping method code.
     */
    protected $method = '$LOWER_NAME$_$LOWER_NAME$';

    /**
     * Calculate rate for shipping method.
     *
     * @return \Webkul\Checkout\Models\CartShippingRate|false
     */
    public function calculate()
    {
        if (! $this->isAvailable()) {
            return false;
        }

        $cart = Cart::getCart();

        $object = new CartShippingRate;

        $object->carrier = '$LOWER_NAME$';
        $object->carrier_title = $this->getConfigData('title');
        $object->method = '$LOWER_NAME$_$LOWER_NAME$';
        $object->method_title = $this->getConfigData('title');
        $object->method_description = $this->getConfigData('description');
        $object->price = 0;
        $object->base_price = 0;

        // Add your shipping calculation logic here
        $price = $this->getConfigData('default_rate') ?? 0;
        
        $object->price = core()->convertPrice($price);
        $object->base_price = $price;

        return $object;
    }
}